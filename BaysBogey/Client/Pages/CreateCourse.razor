@page "/createcourse"
@using AspNetMonsters.Blazor.Geolocation

<Row Margin="Margin.Is2" hidden="@hideInitialCards">
    <Column ColumnSize="ColumnSize.IsHalf">
        <Card Margin="Margin.Is4.FromBottom" Style="height: 100%; flex: 1">
            <CardHeader>
                <CardTitle Size="4" Alignment="TextAlignment.Center">Create a New Golf Course</CardTitle>
            </CardHeader>
            <CardBody>
                <Paragraph>Log a new course by walking or playing through it, marking the tee box and pin locations</Paragraph>
                <Paragraph>Once you've saved the course, you can always go back and add new tee boxes, or update pin locations</Paragraph>
                <Paragraph>This needs to be done before you can keep track of your rounds</Paragraph>
            </CardBody>
            <CardBody Style="display: flex; justify-content: flex-end;">
                <Button Color="Color.Primary" Block="true" Clicked="CreateCourseDialog">Create Course</Button>
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.IsHalf">
        <Card Margin="Margin.Is4.FromBottom" Style="height: 100%; flex: 1">
            <CardHeader>
                <CardTitle Size="4" Alignment="TextAlignment.Center">Update an Existing Golf Course</CardTitle>
            </CardHeader>
            <CardBody>
                <Paragraph>Load a previously created golf course</Paragraph>
                <Paragraph>Do this to add new tee boxes, update pin locations, or finish where you left off with an unfinished course.</Paragraph>
            </CardBody>
            <CardBody Style="display: flex; justify-content: flex-end;">
                <Button Color="Color.Secondary" Block="true" Clicked="LoadCourseDialog">Load Existing Course </Button>
            </CardBody>
        </Card>
    </Column>
</Row>
<Row Margin="Margin.Is2" hidden="@hideCreateCourseForm">
    <Card Margin="Margin.Is4.FromBottom">
        <EditForm Model="@courseToCreate" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <Microsoft.AspNetCore.Components.Forms.ValidationSummary />
            Course Name:
            <InputText id="courseName" @bind-Value="courseToCreate.Name" />
            <button type="submit">Create Course</button>
        </EditForm>
    </Card>
</Row>

@if (existingCourses != null)
{
    <Row Margin="Margin.Is4" hidden="@hideLoadCourseForm">
        <Dropdown>
            <DropdownToggle Color="Color.Primary">Select Existing Course</DropdownToggle>
            <DropdownMenu>
                @foreach (var item in existingCourses)
                {
                    <DropdownItem Clicked="@(e => ExistingCourseChosen(item.Id))"> @item.Name </DropdownItem>
                }
            </DropdownMenu>
        </Dropdown>
    </Row>
}

@if (loadedCourse != null)
{
    <Row Margin="Margin.Is4" hidden="@hideModifyCourseForm">
        <Column ColumnSize="ColumnSize.IsHalf">
            <Card Margin="Margin.Is4.FromBottom">
                <CardHeader>
                    <CardTitle Size="4" Alignment="TextAlignment.Center">@loadedCourse.Name</CardTitle>
                </CardHeader>
                <CardBody>
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Select Hole</FieldLabel>
                        <FieldBody>
                            <Select TValue="int">
                                @foreach (var hole in loadedCourse.Holes)
                                {
                                    <SelectItem Value="hole.Number" @onchange="@(e => HoleSelected(hole))">Hole: @hole.Number</SelectItem>
                                }
                            </Select>
                        </FieldBody>
                            <Button Clicked="AddNewHole" Block="true">Add new Hole</Button>
                    </Field>
                </CardBody>
            </Card>
        </Column>
        @if (currentHole != null)
        {
            <Column ColumnSize="ColumnSize.IsHalf">
            <Card Margin="Margin.Is4.FromBottom">
                <CardHeader>
                    <CardTitle Size="4" Alignment="TextAlignment.Center">Hole @currentHole.Number Details</CardTitle>
                </CardHeader>
                <CardBody>
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Select Tee Box</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is4">
                            <Select TValue="string" Multiple="true">
                                <SelectItem Value="@("Red")">Red</SelectItem>
                                <SelectItem Value="@("White")">White</SelectItem>
                                <SelectItem Value="@("Blue")">Blue</SelectItem>
                                <SelectItem Value="@("Yellow")">Yellow</SelectItem>
                                <SelectItem Value="@("Black")">Black</SelectItem>
                            </Select>
                        </FieldBody>
                    </Field>
                </CardBody>
            </Card>
        </Column>
        }
    </Row>
}